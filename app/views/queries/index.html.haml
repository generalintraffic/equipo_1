.row.cero-margin
  .col-md-2
    #sidebar.well.text-center
      %h3
        Ultimo Reporte
        %input{ class: "form-control" , :name => "utf8", :type => "", :value => "✓"}
      %h3
        Time
        %input{ class: "form-control" , :name => "utf8", :type => "", :value => "✓"}
      %h3.form-group
        Velocidad
        %input{ class: "form-control" , :name => "utf8", :type => "", :value => "✓"}
      .btn.btn-warning
        clear
  .col-md-10
    #map
    :javascript
         L.mapbox.accessToken = 'pk.eyJ1IjoiYXJnZWwyMCIsImEiOiJjaXFyZWI5aDkwMnc4ZnBubjRldjU1Zm1lIn0.zNLRT-KVO3rsfaAquFZK3w';
         var map = L.mapbox.map('map', 'mapbox.streets').setView([10.48815, -66.87653], 13);

         var myLines = {
             "type": "LineString",
             "coordinates": [[10.48815, -66.87653], [10.48830, -66.87670],
                             [10.48815, -66.87343], [10.48830, -66.82370]]
         }

         var myStyle = {
             "color": "#ff7800",
             "weight": 5,
             "opacity": 0.65
         };

         var partvenezuela = [[10.48815, -66.87653]];

         map.fitBounds(partvenezuela);

         var marker1 = L.Marker.movingMarker(myLines.coordinates, [10000,10000,10000]).addTo(map);
         L.polyline(myLines.coordinates).addTo(map);
         marker1.once('click', function () {
             marker1.start();
             marker1.on('click', function() {
                 if (marker1.isRunning()) {
                     marker1.pause();
                 } else {
                     marker1.start();
                 }
             });
             setTimeout(function() {
             }, 2000);
         });
         marker1.bindPopup('<b>Click me to start !</b>');
         marker1.openPopup();
         //--------------------DRAW.JS------------------------------
         var featureGroup = L.featureGroup().addTo(map);
         var drawControl = new L.Control.Draw({
           edit: {
             featureGroup: featureGroup
           },
           draw: {
             polygon: false,
             polyline: false,
             rectangle: true,
             circle: false,
             marker: false
           }
         }).addTo(map);

         map.on('draw:created', showPolygonArea);
         map.on('draw:edited', showPolygonAreaEdited);

         var csvLayer = omnivore.csv('https://api.intraffic.com.ve/routing.geojson', null, L.mapbox.featureLayer()).addTo(map);

         function showPolygonAreaEdited(e) {
           e.layers.eachLayer(function(layer) {
             showPolygonArea({ layer: layer });
           });
         }
         function showPolygonArea(e) {
             layer = e.layer;
             var latlngs = (layer.getLatLngs());
             var diagonal = [latlngs[1], latlngs[3]];
              console.log(diagonal);
           featureGroup.clearLayers();
           featureGroup.addLayer(e.layer);
           e.layer.bindPopup((LGeo.area(e.layer) / 1000000).toFixed(2) + ' km<sup>2</sup>');
           e.layer.openPopup();
            $.post( "192.168.0.106:3000/cars_in_zone.json", function( data ) {
            });

           csvLayer.setFilter(function showCars(feature) {
               return e.latlng.distanceTo(L.latLng(
                       feature.geometry.coordinates[1],
                       feature.geometry.coordinates[0]));
           });
           }
      //----------Sidebar--------------------------
      L.Icon.Big = L.Icon.Default.extend({
        options: {
        iconSize: new L.Point(30, 49),
      }});

          var markers = new Array();
      //THE ICONS
      var bigIcon = new L.Icon.Big();
      var smallIcon = new L.Icon.Default();

        map.on('click', onMapClick);

        function onMarkerClick(e) {
           for (var mark in markers){
                markers[mark].setIcon(smallIcon);}
          var offset =    map._getNewTopLeftPoint(e.target.getLatLng()).subtract(map._getTopLeftPoint());
        map.panBy(offset);
        }

        function onMapClick(e) {
          var marker = new L.Marker(e.latlng);
          marker.on('click', onMarkerClick);
          map.addLayer(marker);
          marker.bindPopup("Marker");
          $('#sidebar').append(
          '<div class="item" id="' + marker._leaflet_id + '">CarName ' + marker._leaflet_id + ' - <a href="#" 	class="remove" id="' + marker._leaflet_id + '">remove</a></div>');
          markers[marker._leaflet_id] = marker;

          $('.remove').on("click", function () {

              map.removeLayer(markers[$(this).attr('id')]);

              $(this).parent('div').remove();
          });

          $('.item').on("mouseover", function () {
              $('div').removeClass('active');
              $(this).addClass('active');
              for (var mark in markers){
                markers[mark].setIcon(smallIcon);}
              markerFunction($(this).attr('id'))
              markers[$(this).attr('id')].setIcon(bigIcon);
              var mid = $(this).attr('id');

          });
        }

        function markerFunction(id){
        markers[id].openPopup();
        }
